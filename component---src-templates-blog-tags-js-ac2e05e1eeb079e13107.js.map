{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./src/templates/blog-card.js","webpack:///./src/templates/image-blog.js","webpack:///./src/templates/blog-tags.js"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","CardHeader","action","avatar","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","type","variant","display","color","content","alignItems","padding","flex","marginRight","alignSelf","marginTop","useStyles","makeStyles","theme","titleText","textDecoration","fontWeight","tagButtonLink","tagsIcon","marginLeft","BlogCard","post","frontmatter","fields","slug","itemScope","itemType","to","itemProp","container","item","xs","sm","pt","icon","faCalendarWeek","size","pl","paragraph","date","justifyContent","tags","map","tag","index","key","kebabCase","rel","length","faTags","alt","thumbnail","filename","pr","dangerouslySetInnerHTML","__html","excerpt","ImageBlog","query","render","data","image","images","edges","find","n","node","relativePath","includes","fluid","childImageSharp","Tags","pageContext","totalCount","allMarkdownRemark","posts","nodes","tagHeader","summary","maxWidth","pb"],"mappings":"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","file":"component---src-templates-blog-tags-js-ac2e05e1eeb079e13107.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Typography,\n  Divider,\n  Grid,\n} from \"@material-ui/core\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faCalendarWeek, faTags } from \"@fortawesome/free-solid-svg-icons\"\nimport ImageBlog from \"./image-blog\"\n\nconst useStyles = makeStyles(theme => ({\n  titleText: {\n    color: \"black\",\n    textDecoration: \"none\",\n    fontWeight: \"bold\",\n    \"&:hover\": {\n      color: \"#666666\",\n    },\n  },\n  tagButtonLink: {\n    textDecoration: \"none\",\n    color: \"black\",\n    \"&:hover\": {\n      color: \"#666666\",\n    },\n  },\n  tagsIcon: {\n    marginLeft: \"10px\",\n  },\n}))\n\nconst BlogCard = ({ post }) => {\n  const classes = useStyles()\n\n  const title = post.frontmatter.title || post.fields.slug\n\n  return (\n    <Card elevation={0}>\n      <article\n        className=\"post-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <CardHeader\n            disableTypography\n            title={\n              <Link\n                to={post.fields.slug}\n                itemProp=\"url\"\n                className={classes.titleText}\n              >\n                <Box fontWeight=\"fontWeightBold\">\n                  <Typography\n                    variant=\"h4\"\n                    color=\"textPrimary\"\n                    itemProp=\"headline\"\n                    className={classes.titleText}\n                  >\n                    {title}\n                  </Typography>\n                </Box>\n                <Divider />\n              </Link>\n            }\n            subheader={\n              <Grid container>\n                <Grid item xs={12} sm={6}>\n                  <Box display=\"flex\" pt={1}>\n                    <Box>\n                      <FontAwesomeIcon icon={faCalendarWeek} size=\"lg\" />\n                    </Box>\n                    <Box pl={2}>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                        paragraph={false}\n                      >\n                        {post.frontmatter.date}\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Box display=\"flex\" justifyContent=\"flex-end\" pt={1}>\n                    <Box>\n                      {post.frontmatter.tags.map((tag, index) => [\n                        <Typography display=\"inline\" key={index}>\n                          <Link\n                            to={`/tags/${kebabCase(tag)}/`}\n                            rel=\"prev\"\n                            className={classes.tagButtonLink}\n                          >\n                            {tag}\n                          </Link>\n                          {post.frontmatter.tags.length !== index + 1\n                            ? \",\\u00A0\"\n                            : \"\"}\n                        </Typography>,\n                      ])}\n                      <FontAwesomeIcon\n                        icon={faTags}\n                        size=\"lg\"\n                        className={classes.tagsIcon}\n                      />\n                    </Box>\n                  </Box>\n                </Grid>\n              </Grid>\n            }\n          />\n        </header>\n\n        <ImageBlog\n          alt={post.frontmatter.thumbnail}\n          filename={post.frontmatter.thumbnail}\n        />\n\n        <section>\n          <Box pt={1} pl={2} pr={2}>\n            <Typography\n              variant=\"body1\"\n              color=\"textSecondary\"\n              dangerouslySetInnerHTML={{\n                __html: post.excerpt,\n              }}\n              itemProp=\"description\"\n            />\n          </Box>\n        </section>\n      </article>\n    </Card>\n  )\n}\n\nexport default BlogCard\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst ImageBlog = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile(filter: { sourceInstanceName: { eq: \"blog\" }, extension: {eq: \"png\"} }) {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 960, maxHeight: 200, quality: 95) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(props.filename)\n      })\n      if (!image) {\n        return null\n      }\n\n      return <Img alt={props.alt} fluid={image.node.childImageSharp.fluid} />\n    }}\n  />\n)\n\nexport default ImageBlog\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Container, Box } from \"@material-ui/core\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport BlogCard from \"../templates/blog-card\"\nimport Header from \"../components/header\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const totalCount = data.allMarkdownRemark.totalCount\n  const posts = data.allMarkdownRemark.nodes\n\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <SEO title=\"Blog tags\" />\n      <Header title={tagHeader} summary=\"\" />\n      <Container maxWidth=\"md\">\n        <Box pt={4} pb={3}>\n          {posts.map(post => {\n            return (\n              <Box key={post.fields.slug} pt={2} pb={6}>\n                <BlogCard post={post} />\n              </Box>\n            )\n          })}\n        </Box>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      nodes {\n        excerpt(pruneLength: 500)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          tags\n          title\n          description\n          thumbnail\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}