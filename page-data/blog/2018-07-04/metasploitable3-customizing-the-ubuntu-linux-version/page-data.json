{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2018-07-04/metasploitable3-customizing-the-ubuntu-linux-version/","result":{"data":{"site":{"siteMetadata":{"title":"Thomas Laurenson"}},"markdownRemark":{"id":"725599b7-51a8-54ed-ba69-464fa51571fb","excerpt":"This post is part of a series on the Ubuntu Linux version of Metasploitable3. The following posts are part of the series: Part 1: Building the Ubuntu Linuxâ€¦","html":"<p>This post is part of a series on the Ubuntu Linux version of Metasploitable3. The following posts are part of the series:</p>\n<ul>\n<li>Part 1: <a href=\"/blog/2018-07-03/metasploitable3-building-the-ubuntu-linux-version/\">Building the Ubuntu Linux Version</a></li>\n<li>Part 2: <a href=\"/blog/2018-07-04-metasploitable3-customizing-the-ubuntu-linux-version\">Customizing the Ubuntu Linux Version</a> (You are here!)</li>\n<li>Part 3: <a href=\"/blog/2018-07-08/metasploitable3-pentesting-the-ubuntu-linux-version-part1\">Pentesting the Ubuntu Linux Version - SQL Injection</a></li>\n<li>Part 4: <a href=\"/blog/2018-07-09/metasploitable3-pentesting-the-ubuntu-linux-version-part2\">Pentesting the Ubuntu Linux Version - Attacking Services</a></li>\n</ul>\n<h2 id=\"contents\" style=\"position:relative;\"><a href=\"#contents\" aria-label=\"contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contents</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#introduction\">Introduction</a></li>\n<li>\n<p><a href=\"#cleaning-the-build-environment\">Cleaning the Build Environment</a></p>\n<ul>\n<li><a href=\"#remove-the-virtual-machine-from-virtualbox\">Remove the Virtual Machine from VirtualBox</a></li>\n<li><a href=\"#removing-the-previous-vagrant-box\">Removing the Previous Vagrant Box</a></li>\n</ul>\n</li>\n<li><a href=\"#customizing-metasploitable3-ubuntu-linux-version\">Customizing Metasploitable3 Ubuntu Linux Version</a></li>\n<li>\n<p><a href=\"#interesting-configuration-files\">Interesting Configuration Files</a></p>\n<ul>\n<li><a href=\"#user-customization\">User Customization</a></li>\n<li><a href=\"#live-customization\">Live Customization</a></li>\n</ul>\n</li>\n<li><a href=\"#conclusion\">Conclusion</a></li>\n</ul>\n</div>\n<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>My previous post was a tutorial about <a href=\"/blog/2018-07-03/metasploitable3-building-the-ubuntu-linux-version/\">Metasploitable3</a>, where I specified the steps required to build the Metasploitable3 Ubuntu Linux version that is not officially finished or documented. In this tutorial, we go a step further and perform some customization of the Metasploitable3 virtual machine. This is performed during the actual build process of the virtual machine and requires editing various configuration files, then rebuilding the virtual machine. In this post, I will cover how to customize the vulnerabilities, users, and flags in the Metasploitable3 virtual machine.</p>\n<h2 id=\"cleaning-the-build-environment\" style=\"position:relative;\"><a href=\"#cleaning-the-build-environment\" aria-label=\"cleaning the build environment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cleaning the Build Environment</h2>\n<p>If you followed my previous tutorial, you will need to clean the Metasploitable3 build environment. If this is not performed, there will be a variety of errors encountered during the rebuilding process. For example, you cannot have two virtual machines in VirtualBox with the same name. Unfortunately, there is no quick clean-up script, so we will have to perform these steps manually. If you have not yet build a version of Metasploitable3, you do not need to perform these tasks.</p>\n<h3 id=\"remove-the-virtual-machine-from-virtualbox\" style=\"position:relative;\"><a href=\"#remove-the-virtual-machine-from-virtualbox\" aria-label=\"remove the virtual machine from virtualbox permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remove the Virtual Machine from VirtualBox</h3>\n<p>Open VirtualBox and locate the previously created virtual machine, it will most likely be named using the default value of: <code class=\"language-text\">Metasploitable3-ub1404</code>. If you want to keep a backup of the original version, you can export it. To achieve this:</p>\n<ul>\n<li>Highlight the virtual machine by left-clicking the machine name</li>\n<li>Left-click <code class=\"language-text\">Expert Mode</code></li>\n<li>Set the <code class=\"language-text\">File</code> path to save the virtual machine (the default location is the <code class=\"language-text\">~/Documents</code> folder)</li>\n<li>You can export to various formats, but I prefer the Open Virtualization Format 1.0</li>\n<li>This will save a <code class=\"language-text\">.ova</code> file for later import</li>\n</ul>\n<p>Once you are happy that you have exported the original virtual machine or just want to remove it, you can delete it using the following steps:</p>\n<ul>\n<li>Right-click the virtual machine (named: <code class=\"language-text\">Metasploitable3-ub1404</code>)</li>\n<li>From the menu, select <code class=\"language-text\">Remove</code></li>\n<li>Make sure to <code class=\"language-text\">Delete all files</code> so that we can create another virtual machine with the same name</li>\n</ul>\n<h3 id=\"removing-the-previous-vagrant-box\" style=\"position:relative;\"><a href=\"#removing-the-previous-vagrant-box\" aria-label=\"removing the previous vagrant box permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Removing the Previous Vagrant Box</h3>\n<p>Like the previous step, you can just delete the <code class=\"language-text\">.box</code> file, or back it up. To save it, I recommend moving the file to the same location as the exported virtual machine. Achieved using the following steps:</p>\n<ul>\n<li>Change to the Metasploitable3 repository folder (if in the home directory: <code class=\"language-text\">cd ~/metasploitable3</code>)</li>\n<li>Move the <code class=\"language-text\">.box</code> file: </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">mv packer/build/ubuntu_1404_virtualbox_0.1.12.box ~/Documents/</code></pre></div>\n<p>If you simply want to delete the previous <code class=\"language-text\">.box</code> file:</p>\n<ul>\n<li>Change to the Metasploitable3 repository folder (if in the home directory: <code class=\"language-text\">cd ~/metasploitable3</code>)</li>\n<li>Delete the <code class=\"language-text\">.box</code> file: </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">rm packer/build/ubuntu_1404_virtualbox_0.1.12.box</code></pre></div>\n<h2 id=\"customizing-metasploitable3-ubuntu-linux-version\" style=\"position:relative;\"><a href=\"#customizing-metasploitable3-ubuntu-linux-version\" aria-label=\"customizing metasploitable3 ubuntu linux version permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing Metasploitable3 Ubuntu Linux Version</h2>\n<p>The default configuration of Metasploitable3 is excellent for training and testing. However, when distributing this machine as an assignment, I wanted to set a variety of custom configurations including changing the default users, changing the hostname, changing the default user (vagrant) password, and turning off the firewall. This section discusses how to perform these changes, and indicates different files and configurations that can be performed.</p>\n<h2 id=\"interesting-configuration-files\" style=\"position:relative;\"><a href=\"#interesting-configuration-files\" aria-label=\"interesting configuration files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interesting Configuration Files</h2>\n<p>According to <a href=\"https://www.packer.io/docs/templates/index.html\">HashiCorp</a>, templates are JSON files that configure the various components of Packer in order to create one or more machine images. The Metasploitable3 project has a collection of Packer templates. For Linux there are three templates:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">packer/templates/ubuntu_1404.json (Normal)\npacker/templates/pro/ubuntu_1404.json (Pro)\npacker/templates/aws/ubuntu_1404_ctf_2017.json (CTF)</code></pre></div>\n<p>And, although not specifically on topic, there are two Packer templates for the Windows Server 2008 build:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">packer/templates/windows_2008_r2.json (Normal)\npacker/templates/pro/windows_2008_r2.json (Pro)</code></pre></div>\n<p>So, there are three Ubuntu Linux templates, that I refer to as: 1) Normal, 2) Pro and 3) CTF. The primary difference between the Normal and Pro templates is that there are no Chef recipes in the Pro template. I have not thoroughly tested, but it appears that no additional software or configuration (apart from installing vmtools) is performed. I think that since the Linux version is still under development, there is not a differentiation yet. When compared to the Windows Server version, the Pro template seems much more secure (from solely looking at the configuration files.)</p>\n<p>In this post, we are going to discuss and customize the <strong>Normal template</strong> available in: <code class=\"language-text\">packer/templates/ubuntu_1404.json</code>. Listed below is a stripped-down version of the <code class=\"language-text\">ubuntu_1404.json</code>. Obviously, the file format is JSON. The first entry is named <code class=\"language-text\">builders</code> which specify what type of virtual machine platform to target. In the previous post, we build a virtual machine for VirtualBox, it seems that we could instead target VMWare. The next entry, named <code class=\"language-text\">provisioners</code> is very interesting. This entry is an array of objects that define the provisioners that will be used to install and configure software. </p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"builders\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vmware-iso\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"virtualbox-iso\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"provisioners\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"chef-solo\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"cookbook_paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"{{template_dir}}/../../chef/cookbooks\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"run_list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"metasploitable::vm_tools\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::users\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::mysql\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::apache_continuum\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::apache\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::php_545\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::phpmyadmin\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::proftpd\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::docker\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::samba\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::sinatra\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::unrealircd\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::chatbot\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::payroll_app\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::readme_app\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::cups\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::drupal\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::knockd\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::iptables\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"metasploitable::flags\"</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As we can see from the list above, this template uses <code class=\"language-text\">chef-solo</code> as a provisioner to install and configure software. There is a path specified to the <em>cookbooks</em>, which are just Ruby programs. The <em>cookbook</em> directory is located at: <code class=\"language-text\">chef/cookbooks/metasploitable/</code>. And within that specific folder is a subfolder named <code class=\"language-text\">recipes</code> that contains the code. I have never used Chef, but it is a very simple and relatable premise. To build the system there is a complete <em>cookbook</em>. Each configuration is a <em>recipe</em> in that <em>cookbook</em>. Pretty simple stuff.</p>\n<p>If you wanted to disable a specific <em>recipe</em> from the <em>cookbook</em>, you could comment out the specific recipe (using a <code class=\"language-text\">#</code> character) or simply delete the line. It would be best practice to create a backup of the original file before deleting anything!</p>\n<p>When I built my Metasploitable3 Ubuntu Linux system for my Security course I completely removed a number of the <em>recipes</em> including:</p>\n<ul>\n<li><code class=\"language-text\">docker</code>: This is a technology that students had not yet used</li>\n<li><code class=\"language-text\">flags</code>: I wanted to put in my own flags, that were simpler (and more fun!)</li>\n<li><code class=\"language-text\">cups</code>: I had no real reason for taking this out!</li>\n</ul>\n<p>Looking back, I would have probably removed the <code class=\"language-text\">iptables</code> <em>recipe</em> as well. In the end, I removed all the <code class=\"language-text\">iptables</code> rules manually, as the implementation of the firewall would make the assessment far too difficult for the level of the paper. The following subsections discuss some more interesting customizations I have performed.</p>\n<h3 id=\"user-customization\" style=\"position:relative;\"><a href=\"#user-customization\" aria-label=\"user customization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>User Customization</h3>\n<p>The user <em>recipe</em> file for user configuration (<code class=\"language-text\">recipes/users.rb</code>) points to another file that has the actual configuration properties of the users (<code class=\"language-text\">attributes/users.rb</code>). The user attribute file can be modified to specify different usernames, passwords and other configuration. An example of the file structure is below:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">default[:users][:leia_organa] = { \n    username: 'leia_organa',\n    password: 'help_me_obiwan',\n    password_hash: '$1$N6DIbGGZ$LpERCRfi8IXlNebhQuYLK/',\n    first_name: 'Leia',\n    last_name: 'Organa',\n    admin: true,\n    salary: '9560' }\n\ndefault[:users][:luke_skywalker] = { \n    username: 'luke_skywalker',\n    password: 'like_my_father_beforeme',\n    password_hash: '$1$/7D55Ozb$Y/aKb.UNrDS2w7nZVq.Ll/',\n    first_name: 'Luke',\n    last_name: 'Skywalker',\n    admin: true,\n    salary: '1080'}</code></pre></div>\n<p>Basically, each user has an entry which specifies basic user configuration including the username, password, password hash. This information can easily be modified. For example, below is the initial entry for the <code class=\"language-text\">darth_vader</code> user account:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">default[:users][:darth_vader] = { \n    username: 'darth_vader',\n    password: 'Dark_syD3',\n    password_hash: '$1$rLuMkR1R$YHumHRxhswnfO7eTUUfHJ.',\n    first_name: 'Darth',\n    last_name: 'Vader',\n    admin: false,\n    salary: '6666'}</code></pre></div>\n<p>And here is my modified version for the same <code class=\"language-text\">darth_vader</code> user account:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">default[:users][:darth_vader] = { \n    username: 'darth_vader',\n    password: 'daddy_issues2277',\n    password_hash: '$1$dqkERFiQ$oMihN1usY.gnbemCa48Pk1',\n    first_name: 'Anakin',\n    last_name: 'Skywalker',\n    admin: true,\n    salary: '10000'}</code></pre></div>\n<p>The only tricky part of this modification was to generate a password for the user. Since the password had changed for <code class=\"language-text\">darth_vader</code>, from <code class=\"language-text\">Dark_syD3</code> to <code class=\"language-text\">daddy_issues2277</code> a new hash is essential. Otherwise, the new password would not match the password stored in the Linux encrypted password file (<code class=\"language-text\">/etc/shadow</code>). I have never done this before, but a couple of Google searches found a simple solution using OpenSSL:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">thomasl@server:~$ openssl passwd -1 \"daddy_issues2277\"\n$1$dqkERFiQ$oMihN1usY.gnbemCa48Pk1</code></pre></div>\n<p>As you can see from the command and output above, the <code class=\"language-text\">openssl</code> tool can generate an MD5 hashed password, and generate a unique salt valueâ€¦ and format the output to adhere to the <code class=\"language-text\">md5crypt</code> syntax that is used many Linux distribution password files. This is the same format used in Ubuntu 14.04 that Metasploitable3 is built on. Once this value is calculated, it is easily copied/pasted into the user configuration file.</p>\n<p>I specifically choose MD5 as the passwords would be easier (read: faster) to crack. Unfortunately, the <code class=\"language-text\">openssl</code> tools does not support the SHA-512 algorithm so another solution is necessary. Here is a simple Python 3 snippet that will generate the correct hash syntax for the <code class=\"language-text\">/etc/shadow</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">python3 <span class=\"token operator\">-</span>c <span class=\"token string\">'import crypt; print(crypt.crypt(\"daddy_issues2277\", crypt.mksalt(crypt.METHOD_SHA512)))'</span></code></pre></div>\n<p>In addition to usernames, passwords, and password hashes, there are other configurations in the usersâ€™ file. The <code class=\"language-text\">admin</code> setting specifies whether a user should have <code class=\"language-text\">sudo</code> access. This is an important choice, as a modification of this can greatly hinder (or help) pentests. Finally, the <code class=\"language-text\">salary</code> value is used in the <code class=\"language-text\">payroll_app</code> <em>recipe</em> which is used to display the wages of specific users. From my experience, it is more for fun than anything else.</p>\n<h3 id=\"live-customization\" style=\"position:relative;\"><a href=\"#live-customization\" aria-label=\"live customization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Live Customization</h3>\n<p>So far, we have only customized of the build process. It is very easy to customize some parts of the Metasploitable3 system in a live environment; for example, when running the built virtual machine in VirtualBox. If you are like me and are not an expert using Vagrant, Packer, and Chef, this is a highly suitable solution.</p>\n<h4 id=\"changing-the-vagrant-password\" style=\"position:relative;\"><a href=\"#changing-the-vagrant-password\" aria-label=\"changing the vagrant password permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Changing the vagrant password</h4>\n<p>By default, Metasploitable3 is configured with a user named: <code class=\"language-text\">vagrant</code> that is used to build the virtual machine. To keep things simple, the password for the account is also <code class=\"language-text\">vagrant</code>. However, the virtual machine cannot be deployed with these default credentials, as it is too easy to break. I have even witnessed other vagrant builds that use the same credentials and could log in without knowing anything about the system (these were not deployed, only in testing environmentsâ€¦ but still!). The <code class=\"language-text\">vagrant</code> user configuration can be changed in the build process by editing the following files:</p>\n<ul>\n<li><code class=\"language-text\">packer/http/preseed.cfg</code> on the following lines:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">d-i passwd/user-fullname string vagrant\nd-i passwd/username string vagrant\nd-i passwd/user-password password vagrant\nd-i passwd/user-password-again password vagrant</code></pre></div>\n<ul>\n<li><code class=\"language-text\">packer/templates/ubuntu_1404.json</code> on the following lines:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">\"ssh_username\": \"vagrant\",\n\"ssh_password\": \"vagrant\",</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Vagrantfile</code> on the following lines:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">config.ssh.username = 'vagrant'\nconfig.ssh.password = 'vagrant'</code></pre></div>\n<p>However, I have not fully tested this modification, but it is the only places in the code I have witnessed this coding. Given that, it is probably easier just changing the password in the live system. This is exceptionally simple. Login to the deployed virtual machine (after running <code class=\"language-text\">vagrant up</code>), and execute the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">sudo passwd vagrant</code></pre></div>\n<h4 id=\"changing-the-hostname\" style=\"position:relative;\"><a href=\"#changing-the-hostname\" aria-label=\"changing the hostname permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Changing the hostname</h4>\n<p>The hostname (or computer name) is a similar situation. It can, of course, be changed in both the live system and the build process. The only location I could discover that specifies the hostname configuration is in the <code class=\"language-text\">Vagrantfile</code> on the following line:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">ub1404.vm.hostname = \"metasploitable3-ub1404\"</code></pre></div>\n<p>Again, it would be simpler to modify this property in the live system by editing the following two files:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">/etc/hosts\n/etc/hostname</code></pre></div>\n<h4 id=\"uninstalling-virtualbox-guest-additions\" style=\"position:relative;\"><a href=\"#uninstalling-virtualbox-guest-additions\" aria-label=\"uninstalling virtualbox guest additions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uninstalling VirtualBox Guest Additions</h4>\n<p>I only used VirtualBox for the build process. After that, I export the virtual machine and import it into the VMWare vSphere platform. I know this sounds crazy. I donâ€™t have a license for VMWare Workstation for Linux. Additionally, I noted that in the <code class=\"language-text\">vmtools.rb</code> <em>recipe</em> there is no option for VMWare. Not sure if this would be problematic during the building process. Anyway, another good configuration to perform on a live system in removal of the VBoxGuestAdditions package. The following commands will achieve uninstallation of this package.\nUninstall VBox tools</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">cd /opt/VBoxGuestAdditions-<version_number>\nsudo ./uninstall.sh</code></pre></div>\n<h4 id=\"reset-firewallturn-off-firewall\" style=\"position:relative;\"><a href=\"#reset-firewallturn-off-firewall\" aria-label=\"reset firewallturn off firewall permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reset firewall/turn off firewall</h4>\n<p>If you did not remove the <code class=\"language-text\">iptables.rb</code> <em>recipe</em> you can always manually turn off the firewall on a live system. This is easily achieved using the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">sudo iptables --policy INPUT\nsudo iptables --policy OUTPUT\nsudo iptables --policy FORWARD\nsudo iptables -F</code></pre></div>\n<h4 id=\"changing-the-flags\" style=\"position:relative;\"><a href=\"#changing-the-flags\" aria-label=\"changing the flags permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Changing the flags</h4>\n<p>One of the most exciting aspects of Metasploitable3 are the flags. Nested in the capture the flag tournaments, flags offer the chance to find and extract information. They add something fun into the mix. In an assessment, the flags are thoroughly enjoyed by students. Instead of writing a Chef <em>recipe</em> to build custom flags, I simply disable the <em>recipe</em> and manually add them. In my assessment, the flags are much easier. For example, in the home directory of <code class=\"language-text\">boba_fett</code> I added a text file to help students find a user account with <code class=\"language-text\">sudo</code> access, and provide them a password at the same time.</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">Darth Vader always forgets his password, so I was told to keep a backup.\n\nDocumented the password for darth_vader below:\ndaddy_issues2277\n\nI mean, for someone so powerful with the force, he is kinda forgetful.</code></pre></div>\n<h2 id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>Hopefully, this tutorial gave you some guidance and hints about customizing Metasploitable3 Ubuntu Linux version. These changes can be exceptionally useful if you want to have a custom virtual machine that targets different levels of difficulty or uses different user credentials. Stay tuned for my next Metasploitable3 tutorial, a summary of some vulnerabilities and exploits for the Metasploitable3 Ubuntu Linux version.</p>\n<p>If you are interested in the steps/method I used to configure Metasploitable3 Windows Server 2008 version, please leave a comment. I have the notes for 2017, and would happy re-visit and re-build the machine while making notes if anyone is interested! Also, if you have any feedback, ideas or questions, please leave a comment below.</p>","frontmatter":{"title":"Metasploitable3 - Customizing the Ubuntu Linux Version","date":"July 04, 2018","tags":["Metasploitable3","Pentesting","Linux"],"description":"Tutorial on Customizing the Metasploitable3 Ubuntu Linux version.","thumbnail":"metasploitable3.png"}},"previous":{"fields":{"slug":"/blog/2018-07-03/metasploitable3-building-the-ubuntu-linux-version/"},"frontmatter":{"title":"Metasploitable3 - Building the Ubuntu Linux Version"}},"next":{"fields":{"slug":"/blog/2018-07-05/building-an-ubuntu-linux-gateway/"},"frontmatter":{"title":"Building an Ubuntu Linux Gateway"}}},"pageContext":{"id":"725599b7-51a8-54ed-ba69-464fa51571fb","previousPostId":"b307e159-e6ad-5ec3-a739-3bb5138e9fb4","nextPostId":"2ab309a1-e047-50bd-85f9-cbf147b9ac37"}},"staticQueryHashes":["1771194231","2841359383","3880320062"]}